<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.nmfw.foodietree.domain.reservation.mapper.ReservationMapper">

    <!--  customerId로 예약 목록 조회 -->
    <select id="findReservationsByCustomerId" resultType="org.nmfw.foodietree.domain.reservation.dto.resp.ReservationDetailDto">
        SELECT
        r.reservation_id,
        r.customer_id,
        r.product_id,
        r.reservation_time,
        r.cancel_reservation_at,
        r.picked_up_at,
        p.store_id,
        p.pickup_time,
        s.store_name,
        s.category,
        s.address,
        s.price,
        s.store_img,
        c.nickname
        FROM
        tbl_reservation r
        JOIN tbl_product p ON r.product_id = p.product_id
        JOIN tbl_store s ON p.store_id = s.store_id
        JOIN tbl_customer c ON r.customer_id = c.customer_id
        WHERE
        r.customer_id = #{customerId}
        ORDER BY p.pickup_time DESC
    </select>

    <!--  예약 취소  -->
    <update id="cancelReservation">
        UPDATE tbl_reservation
        SET cancel_reservation_at = NOW()
        WHERE reservation_id = #{reservationId}
    </update>

    <!--  픽업 완료  -->
    <update id="completePickup">
        UPDATE tbl_reservation
        SET picked_up_at = NOW()
        WHERE reservation_id = #{reservationId}
    </update>

    <!--  예약 시간 조회  -->
    <select id="findByReservationId" resultType="org.nmfw.foodietree.domain.reservation.dto.resp.ReservationStatusDto">
        SELECT
        r.reservation_time,
        r.cancel_reservation_at,
        r.picked_up_at,
        p.pickup_time
        FROM tbl_reservation r
        JOIN tbl_product p ON r.product_id = p.product_id
        WHERE reservation_id = #{reservationId}
    </select>

    <!--  예약 상세 조회  -->
    <select id="findReservationByReservationId" resultType="org.nmfw.foodietree.domain.reservation.dto.resp.ReservationDetailDto">
        SELECT
        r.reservation_id,
        r.product_id,
        r.customer_id,
        r.reservation_time,
        r.cancel_reservation_at,
        r.picked_up_at,
        p.store_id,
        p.pickup_time,
        s.store_name,
        s.category,
        s.address,
        s.price,
        s.store_img,
        c.nickname,
        c.profile_image
        FROM
        tbl_reservation r
        JOIN tbl_product p ON r.product_id = p.product_id
        JOIN tbl_store s ON p.store_id = s.store_id
        JOIN tbl_customer c ON r.customer_id = c.customer_id
        WHERE r.reservation_id = #{reservationId}
    </select>

    <!--  예약 생성  -->
    <insert id="createReservation">
        INSERT INTO tbl_reservation
        (customer_id, product_id)
        VALUES (#{customerId}, #{productId})
    </insert>

    <!--  예약 가능 제품 조회  -->
    <select id="findByStoreIdLimit" resultType="org.nmfw.foodietree.domain.reservation.dto.resp.ReservationFoundStoreIdDto">
        SELECT
        store_id,
        product_id,
        TIMESTAMPDIFF(SECOND, NOW(), pickup_time) as 'sec_left'
        FROM
        tbl_product
        WHERE 1=1
        AND store_id = #{storeId}
        AND TIMESTAMPDIFF(SECOND, NOW(), pickup_time) > 0
        AND canceled_by_store_at IS NULL
        LIMIT #{cnt}
    </select>

    <!-- 가게 예약리스트 조회 -->
    <select id="findReservations" resultType="org.nmfw.foodietree.domain.store.dto.resp.StoreReservationDto">
        SELECT
            c.customer_id,
            c.profile_image,
            c.nickname,
            c.customer_phone_number,
            p.product_id,
            r.reservation_id,
            r.reservation_time,
            r.cancel_reservation_at,
            r.picked_up_at,
            p.pickup_time,
            p.product_upload_date,
            s.price,
            s.open_at,
            s.closed_at
        FROM
            tbl_reservation r
        JOIN
            tbl_customer c ON r.customer_id = c.customer_id
        JOIN
            tbl_product p ON p.product_id = r.product_id
        JOIN
            tbl_store s ON s.store_id = p.store_id
        WHERE
            s.store_id = #{storeId}
        ORDER BY p.pickup_time DESC
    </select>
</mapper>