<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.nmfw.foodietree.domain.customer.mapper.CustomerMyPageMapper">

    <resultMap id="CustomerMyPageResultMap" type="org.nmfw.foodietree.domain.customer.dto.resp.CustomerMyPageDto">
        <id property="customerId" column="customer_id" />
        <result property="nickname" column="nickname" />
        <result property="profileImage" column="profile_img" />
        <result property="customerPhoneNumber" column="customer_phone_number" />
    </resultMap>

    <!-- Customer 정보 가져오기 -->
    <select id="findOne" resultType="CustomerMyPageDto">
        SELECT
            customer_id,
            customer_phone_number,
            nickname,
            profile_image
        FROM
            tbl_customer
        WHERE
            customer_id = #{customerId}
    </select>

    <!-- 선호하는 지역 가져오기 -->
    <select id="findPreferenceAreas" resultType="String">
        SELECT
            preferred_area
        FROM
            tbl_fav_area
        WHERE
            customer_id = #{customerId}
    </select>

    <!-- 선호하는 음식 가져오기 -->
    <select id="findPreferenceFoods" resultType="PreferredFoodDto">
        SELECT
            f.preferred_food,
            fc.food_image
        FROM
            tbl_fav_food f
        JOIN tbl_food_category fc ON fc.food_name = f.preferred_food
        WHERE
            customer_id = #{customerId}
    </select>

<!--    회원 기본 정보 업데이트 -->
    <update id="updateCustomerInfo">
        UPDATE tbl_customer
        <set>
            <choose>
                <when test="type == 'nickname'">
                    nickname = #{value}
                </when>
                <when test="type == 'customer_phone_number'">
                    customer_phone_number = #{value}
                </when>
                <when test="type == 'profile_image'">
                    profile_image = #{value}
                </when>
                <when test="type == 'customer_password'">
                    customer_password = #{value}
                </when>
            </choose>
        </set>
        WHERE customer_id = #{customerId}
    </update>

    <select id="findReservations" resultType="ReservationDetail">
        SELECT
            r.reservation_id,
            r.customer_id,
            r.product_id,
            r.reservation_time,
            r.cancel_reservation_at,
            r.picked_up_at,
            p.store_id,
            p.pickup_time,
            s.store_name,
            s.category,
            s.address,
            s.price,
            s.store_img,
            c.nickname
        FROM
            tbl_reservation r
        JOIN tbl_product p ON r.product_id = p.product_id
        JOIN tbl_store s ON p.store_id = s.store_id
        JOIN tbl_customer c ON r.customer_id = c.customer_id
        WHERE
            r.customer_id = #{customerId}
        ORDER BY p.pickup_time DESC
        ;
    </select>

    <select id="findIssues" resultType="CustomerIssues">
        SELECT
            i.customer_id,
            i.reservation_id,
            i.issue_category,
            i.issue_complete_at,
            i.issue_text,
            i.cancel_issue_at,
            s.store_name,
            c.nickname
        FROM tbl_issue i
        JOIN tbl_reservation r ON i.reservation_id = r.reservation_id
        JOIN tbl_product p ON r.product_id = p.product_id
        JOIN tbl_store s ON p.store_id = s.store_id
        JOIN tbl_customer c ON i.customer_id = c.customer_id
        WHERE i.customer_id = #{customerId}
    </select>

    <select id="findFavStore" resultType="CustomerFavStoreDto">
        SELECT
            fs.customer_id,
            fs.store_id,
            s.store_name,
            s.store_img
        FROM
            tbl_fav_store fs
        JOIN tbl_store s ON fs.store_id = s.store_id
        WHERE
            customer_id = #{customerId}
    </select>

    <select id="isNicknameDuplicate" resultType="boolean">
        SELECT
            COUNT(*)
        FROM
            tbl_customer
        WHERE
            nickname = #{nickname}
    </select>

    <insert id="addPreferenceArea">
        INSERT INTO tbl_fav_area
            (customer_id, preferred_area)
        VALUES
            (#{customerId}, #{value})
    </insert>

    <delete id="deletePreferenceArea">
        DELETE FROM tbl_fav_area
        WHERE customer_id = #{customerId}
            AND preferred_area = #{target}
    </delete>

    <insert id="addPreferenceFood">
        INSERT INTO tbl_fav_food
            (customer_id, preferred_food)
        VALUES
            (#{customerId}, #{value})
    </insert>

    <delete id="deletePreferenceFood">
        DELETE FROM tbl_fav_food
        WHERE customer_id = #{customerId}
                AND preferred_food = #{target}
    </delete>

    <insert id="addFavStore">
        INSERT INTO tbl_fav_store
            (customer_id, store_id)
        VALUES
            (#{customerId}, #{value})
    </insert>

    <delete id="deleteFavStore">
        DELETE FROM tbl_fav_store
        WHERE customer_id = #{customerId}
                AND store_id = #{target}
    </delete>

</mapper>